version: "2"
services:
  zoo:
    image: zookeeper:latest
    restart: always
    container_name: zoo
    hostname: zoo
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181

  kafka:
    image: wurstmeister/kafka:latest
    restart: always
    container_name: kafka
    hostname: kafka
    ports:
      - 9092:9092
      - 9192:9192
    environment:
      KAFKA_ADVERTISED_HOST_NAME: # <HOST_IP>
      KAFKA_ZOOKEEPER_CONNECT: zoo:2181
      KAFKA_CREATE_TOPICS: "topic-from-node:1:1,topic-to-node:1:1"
      JMX_PORT: 9192
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Djava.net.preferIPv4Stack=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  manager:
    image: rurumimic/kafka-manager:latest
    restart: always
    container_name: manager
    hostname: manager
    ports:
      - 9000:9000
    environment:
      ZK_HOSTS: "zoo:2181"

  spark:
    image: bitnami/spark:latest
    restart: always
    container_name: spark
    hostname: spark
    ports:
      - 8080:8080
      - 7077:7077
    volumes:
      - ./wordcounter.jar:/tmp/wordcounter.jar
    command: spark-submit --master spark://spark:7077 /tmp/wordcounter.jar
